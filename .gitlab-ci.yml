stages:
  - prep-machine
  - build-db
variables:
  host: $dbdevmachine1ip
  port: 3010
  database: bmgf
  schemas: bmgf
  user: $devdb1_user
  password: $devdeb1_password
  SERVER_URL: 10.148.7.21
  SERVER_USER: rroth



start-db-container:
  image: node
  stage: prep-machine
  script:
       # Install ssh-agent if not already installed, it is required by Docker.
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
      # Run ssh-agent
    - eval $(ssh-agent -s)
      # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null #add ssh key to gitlab
      # Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
      # Make sure the known hosts file exists and adds dev server ip to it
      # disable host key checking (NOTE: makes you susceptible to man-in-the-middle attacks)
      # WARNING: use only in docker container, if you use it with shell you will overwrite your user's ssh config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - scp  $CI_PROJECT_DIR/dev-deploy/docker-compose.yml ${SERVER_USER}@${SERVER_URL}:~/dev-deploy/docker-compose.yml   #copy over the docker-compose file
    - ssh -q ${SERVER_USER}@${SERVER_URL} "cd ~/dev-deploy; dbuser=${devdb1_user} password=${devdeb1_password} databasename=${database} port=${port} docker-compose up --remove-orphans --detach"



wipe-db:
  stage: build-db
  image:
    name: flyway/flyway:latest
    entrypoint: [""]
  script:
    - echo $host
    - flyway clean   -url="jdbc:postgresql://${host}:${port}/${database}" -user=${user} -password=${password} -schemas=${schemas}
    - flyway migrate -url="jdbc:postgresql://${host}:${port}/${database}" -user=${user} -password=${password} -schemas=${schemas} -locations=filesystem:db/,filesystem:raw-data -validateOnMigrate=true
    - flyway info    -url="jdbc:postgresql://${host}:${port}/${database}" -user=${user} -password=${password} -schemas=${schemas} -locations=filesystem:db/,filesystem:raw-data
  needs:
    - start-db-container
